<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">
	<!-- post의 모든 정보를 가져오는 쿼리문 -->
	<select id="getAllPost">
		SELECT	*
		FROM	POSTS1
	</select>
	
	<select id="postList" parameterType="int" resultType="postVO">
		SELECT	*
		FROM	POSTS1
		WHERE	BOARDID = #{boardid}
	</select>
	
	
  	<!-- 사용자 페이지 리스트 조회 -->
	<!-- pageVo int page, int pageSize -->
  <select id = "PagingList" parameterType="pageVo" resultType="postVO">
  	<![CDATA[
  	SELECT *
	FROM
	(
		SELECT a.*, rownum rn
	 	FROM 
		(
			SELECT a.*
			 FROM POSTS1 a
			 ORDER BY POSTID)
		a)
		
	WHERE rn >= (#{page}-1)*#{pageSize} +1 and rn<= #{page}*#{pageSize}
	]]>
<!-- 	WHERE rn &gt;= 1 AND  rn &lt;= 10 ; -->
  </select>
  
  
  <!-- 사용자 페이지 리스트 조회 -->
	<!-- pageVo int page, int pageSize -->
  <select id = "postPagingList" parameterType="java.util.HashMap" resultType="postVO">
  	<![CDATA[
  	SELECT b.*
	FROM
	(
		SELECT a.*, ROWNUM rn
		FROM
		(
			SELECT POST.*, LPAD(' ', (LEVEL-1)*4) || POST.TITLECUL, level-1 lv
			FROM POSTS1 POST
			WHERE BOARDID = #{boardid}
			START WITH POSTID2 = 0
			CONNECT BY PRIOR POSTID = postid2
			ORDER SIBLINGS BY GROUP_SEQ desc, postid asc
		)a
	)b
	WHERE rn >= (#{page}-1)*#{pageSize} +1 and rn<= #{page}*#{pageSize}
	]]>
  </select>
  
  
  	<!-- 게시글 전체수 조회 -->
	<select id = "postCount" parameterType="int" resultType="int">
 		SELECT  COUNT(*)
		FROM    POSTS1
		WHERE	BOARDID = #{boardid}
	</select>
	
	<!-- 게시글 ID로 해당 게시글 조회 -->
	<select id="searchPostId" parameterType="boardVO" resultType="postVO">
		SELECT	*
		FROM	POSTS1
		WHERE	POSTID=#{postid}
		AND     BOARDID=#{boardid}	
	</select>
	
	<!-- 게시글 등록 후 등록한 게시물의 번호를 반환하는 쿼리문 -->
	<insert id="insertPost" keyProperty="seq" parameterType="postVO">
		INSERT INTO POSTS1
    	VALUES(
			POSTS1_SEQ.NEXTVAL,
			#{userid},
			#{postid2},
			#{boardid},
			0,
			#{titlecul},
			#{contentcul},
			SYSDATE,
			'N',
			POSTS1_SEQ.CURRVAL
    	)
	</insert>
	
	
	<!-- 게시글의 삭제여부를 삭제로 바꾸는 메서드 -->
	<update id="updatePost" parameterType="postVO">
		UPDATE	POSTS1
		SET		DELETECUL = 'Y'
		WHERE	POSTID=#{postid}
		AND		USERID = #{userid}
	</update>
	
	<!-- 제일 큰 POSTID값을 반환하는 메서드 -->
	<select id="postIdMaxValue" resultType="int">
		SELECT	MAX(POSTID)
		FROM	POSTS1
	</select>
	
	<!-- 답글 게시글 등록 쿼리문 -->
	<insert id="insertReply" parameterType="postVO">
		INSERT INTO POSTS1
    	VALUES(
			POSTS1_SEQ.NEXTVAL,
			#{userid},
			#{postid2},
			#{boardid},
			0,
			#{titlecul},
			#{contentcul},
			SYSDATE,
			'N',
			${groupSeq}
    	)
	</insert>
	
	<!-- 부모 게시글의 시퀀스번호를 받아서 부모정보 알아내기  -->
	<select id="selectParent" parameterType="postVO" resultType="postVO">
		SELECT	*
		FROM	POSTS1
		WHERE	POSTID = ${postid}
	</select>
	
	<!-- 게시글 수정 쿼리문 -->
	<update id="updatePostContent" parameterType="postVO">
		UPDATE	POSTS1
		SET		CONTENTCUL = #{contentcul},
				TITLECUL = #{titlecul}
		WHERE	POSTID = #{postid}
		AND		BOARDID = #{boardid}
	</update>
	
	
</mapper>